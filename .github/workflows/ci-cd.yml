name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run code quality checks
      run: |
        flake8 app/ --max-line-length=100 --exclude=__pycache__ --count --statistics
      continue-on-error: true
    
    - name: Run unit tests
      run: |
        pytest tests/ -v --cov=app --cov-report=xml --cov-report=term
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker image
      run: |
        docker build -t waste-monitor-api:${{ github.sha }} .
        docker tag waste-monitor-api:${{ github.sha }} waste-monitor-api:latest
    
    - name: Test Docker image
      run: |
        docker run -d --name test-container -p 8001:8000 waste-monitor-api:latest
        sleep 10
        curl -f http://localhost:8001/ || exit 1
        docker stop test-container
        docker rm test-container
    
    - name: Login to Docker Hub
      if: github.ref == 'refs/heads/main'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Push to Docker Hub
      if: github.ref == 'refs/heads/main'
      run: |
        docker tag waste-monitor-api:latest ${{ secrets.DOCKER_USERNAME }}/waste-monitor-api:latest
        docker tag waste-monitor-api:latest ${{ secrets.DOCKER_USERNAME }}/waste-monitor-api:${{ github.sha }}
        docker push ${{ secrets.DOCKER_USERNAME }}/waste-monitor-api:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/waste-monitor-api:${{ github.sha }}
    
    - name: Image digest
      if: github.ref == 'refs/heads/main'
      run: echo "Image pushed successfully!"

  deploy:
    name: Deploy to Test Environment
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy notification
      run: |
        echo "Deployment step would run here"
        echo "In production, this would deploy to a test server or Kubernetes cluster"
